dist: bionic
sudo: required
language:
  - generic
python:
  - "2.7"
compiler:
  - gcc
cache:
  apt: true
  pip: true
  directories:
    - $HOME/.ccache
    - $HOME/.cache/pip
    - $HOME/apt-cacher-ng
services:
  - docker

env:
  global:
    - USE_JENKINS=false
    - USE_TRAVIS=true
    - USE_DOCKER=true
  matrix:
    # BUILD_PKGS: avoid compiling unused packages
    - ROS_DISTRO=kinetic USE_DEB=false NOT_TEST_INSTALL=true BUILD_PKGS="hrpsys_choreonoid_tutorials jvrc_models hrpsys_choreonoid hrpsys_ros_bridge_jvrc"
    - ROS_DISTRO=kinetic USE_DEB=false NOT_TEST_INSTALL=true BUILD_PKGS="choreonoid hrpsys_choreonoid_tutorials jvrc_models hrpsys_choreonoid hrpsys_ros_bridge_jvrc"
    - ROS_DISTRO=melodic USE_DEB=false NOT_TEST_INSTALL=true BUILD_PKGS="hrpsys_choreonoid_tutorials jvrc_models hrpsys_choreonoid hrpsys_ros_bridge_jvrc"
    - ROS_DISTRO=melodic USE_DEB=false NOT_TEST_INSTALL=true BUILD_PKGS="choreonoid hrpsys_choreonoid_tutorials jvrc_models hrpsys_choreonoid hrpsys_ros_bridge_jvrc"

matrix:
  allow_failures:
    # rtmros_choreonoid can be compiled without compiling choreonoid.
    - env: ROS_DISTRO=kinetic USE_DEB=false NOT_TEST_INSTALL=true BUILD_PKGS="choreonoid hrpsys_choreonoid_tutorials jvrc_models hrpsys_choreonoid hrpsys_ros_bridge_jvrc"
    - env: ROS_DISTRO=melodic USE_DEB=false NOT_TEST_INSTALL=true BUILD_PKGS="choreonoid hrpsys_choreonoid_tutorials jvrc_models hrpsys_choreonoid hrpsys_ros_bridge_jvrc"

before_script:
  # follow the installation instructions in the readme
  - if [ "${ROS_DISTRO}" == "kinetic" ] ; then add_scr="./choreonoid/misc/script/install-requisites-ubuntu-16.04.sh"; if [ "${BEFORE_SCRIPT}" == "" ] ; then export BEFORE_SCRIPT=${add_scr}; else export BEFORE_SCRIPT="${BEFORE_SCRIPT}; ${add_scr}"; fi; fi;
  - if [ "${ROS_DISTRO}" == "melodic" ] ; then add_scr="./choreonoid/misc/script/install-requisites-ubuntu-18.04.sh"; if [ "${BEFORE_SCRIPT}" == "" ] ; then export BEFORE_SCRIPT=${add_scr}; else export BEFORE_SCRIPT="${BEFORE_SCRIPT}; ${add_scr}"; fi; fi;
  - add_scr="patch -p1 -d choreonoid < rtmros_choreonoid/choreonoid.patch"; if [ "${BEFORE_SCRIPT}" == "" ] ; then export BEFORE_SCRIPT=${add_scr}; else export BEFORE_SCRIPT="${BEFORE_SCRIPT}; ${add_scr}"; fi;
  # libpng12-dev(depend of choreonoid) and leap_motion(depend of hironx_tutorials) are not released on melodic
  - if [ "${ROS_DISTRO}" == "melodic" ] ; then export ROSDEP_ADDITIONAL_OPTIONS="-n -q -r --ignore-src --skip-keys libpng12-dev --skip-keys leap_motion"; fi;
  # To avoid exceeding the maximum log length on melodic
  - if [ "${ROS_DISTRO}" == "melodic" ] && [ "${USE_DEB}" != "true" ] ; then add_scr="pwd; sed -i \"35iadd_definitions(-Wno-deprecated)\" hrpsys/CMakeLists.txt; (cd hrpsys; git diff)"; if [ "${BEFORE_SCRIPT}" == "" ] ; then export BEFORE_SCRIPT=${add_scr}; else export BEFORE_SCRIPT="${BEFORE_SCRIPT}; ${add_scr}"; fi; fi;
  - if [ "${ROS_DISTRO}" == "melodic" ] && [ "${USE_DEB}" != "true" ] ; then add_scr="pwd; sed -i \"32iadd_definitions(-Wno-deprecated)\" choreonoid/CMakeLists.txt; (cd choreonoid; git --no-pager diff)"; if [ "${BEFORE_SCRIPT}" == "" ] ; then export BEFORE_SCRIPT=${add_scr}; else export BEFORE_SCRIPT="${BEFORE_SCRIPT}; ${add_scr}"; fi; fi;
  # avoid building run_depend to reduce building time on melodic
  - if [ "${ROS_DISTRO}" == "melodic" ] && [ "${USE_DEB}" != "true" ] ; then export CATKIN_TOOLS_CONFIG_OPTIONS="--blacklist jsk_footstep_controller jsk_footstep_planner"; fi;

script:
  - source .travis/travis.sh
